name: Automatisation des tests DevSecOps

on: push

jobs:
  Dependances:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Analyse des dépendances Python
        run: |
          docker run --rm \
            -v "${{ github.workspace }}":/project \
            -v $HOME/.cache/trivy:/root/.cache/ \
            aquasec/trivy:latest fs /project/requirements.txt

  Dockerfile:
    runs-on: ubuntu-latest
    needs: Dependances
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name : Create Image
        run: |
            docker build -t imgvulne:2.1 .
      - name: Test Dockerfile
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$HOME/.cache/trivy":/root/.cache/ \
            aquasec/trivy:latest image --format json --severity HIGH,CRITICAL imgvulne:2.1 \
            | jq -r '
            ["TARGET","PACKAGE","INSTALLED","VULN","SEVERITY"],
            (.Results[]? as $r | $r.Vulnerabilities[]? | [$r.Target, .PkgName, .InstalledVersion, .VulnerabilityID, .Severity]) 
            | @tsv' \
            | column -t -s $'\t'

  Deploy:
    runs-on: ubuntu-latest
    needs: Dockerfile
    steps:
      - name: Deploy
        run: echo "Rien à faire ici. Votre application est prête à être déployée"
